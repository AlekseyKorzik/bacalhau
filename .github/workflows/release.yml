name: Release Bacalhau binaries

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: "false"

jobs:
  release:
    name: Build and Release ${{ matrix.target_os }}_${{ matrix.target_arch }} binaries
    runs-on: ${{ matrix.os }}
    env:
      GOVER: ${{ matrix.go-version }}
      GOLANGCILINT_VER: v1.45
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      GOPROXY: https://proxy.golang.org
      ARCHIVE_OUTDIR: dist/archives
      MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.17.6]
        include:
          - os: ubuntu-latest
            target_os: linux
            target_arch: amd64
          - os: [M1, macOS-latest]
            target_os: darwin
            target_arch: arm64
          - os: macOS-latest
            target_os: darwin
            target_arch: amd64

    steps:
      - uses: actions/checkout@main
      - name: Install go@1.17
        run: brew install go@1.17

      - run: go version
      - run: 'echo "$PRIVATE_PEM" > /tmp/private.pem'
        shell: bash
        env:
          PRIVATE_PEM: ${{secrets.PRIVATE_PEM}}

      #       - uses: evantorrie/mott-the-tidier@v1-beta
      #         with:
      #           gomods: |
      #             **/go.mod
      #             -tools/go.mod
      #       - uses: stefanzweifel/git-auto-commit-action@v4
      #         with:
      #           commit_message: Auto-fix go.sum discrepancies

      - name: golangci-lint
        if: matrix.target_arch == 'amd64' && matrix.target_os == 'linux'
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          version: ${{ env.GOLANGCILINT_VER }}

      - name: Run go mod tidy check diff
        if: matrix.target_arch == 'amd64' && matrix.target_os == 'linux'
        run: make modtidy check-diff

      - name: Build
        run: GOOS=${{ matrix.target_os }} GOARCH=${{ matrix.target_arch }} make build

      - name: Install gon
        if: matrix.target_os == 'darwin'
        run: brew install mitchellh/gon/gon

      - name: Generate .gon.json
        if: matrix.target_os == 'darwin'
        run: |-
          sh -c '
          cat > /tmp/.gon.json << EOF
          {
              "source": ["./bin/${{ matrix.target_os }}_${{ matrix.target_arch }}/bacalhau"],
              "bundle_id": "org.bacalhau",
              "apple_id": {
                  "username": "davidaronchick@hotmail.com",
                  "password": "@env:APPLE_DEVELOPER_ID_PASSWORD"
              },
              "sign": {
                  "application_identity": "Developer ID Application: David Aronchick (A4J58RH62D)"
              }
          }          
          EOF
          '

      # ONLY DEBUGS WITH DARWIN (for now)
      - name: Debugging with tmate
        uses: mxschmitt/action-tmate@v3.11
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && matrix.target_os == 'darwin' }}

      - name: Codesign create keychain
        if: matrix.target_os == 'darwin'
        run: |
          # Reusing MACOS_CERTIFICATE_PWD for both the build.keychain password and the cert password for convenience.
          # Doesn't seem like this would be an issue.
          echo $MACOS_CERTIFICATE > /tmp/macos_certificate
          base64 -i /tmp/macos_certificate --decode > /tmp/certificate.p12
          security create-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_CERTIFICATE_PWD build.keychain

      - name: Codesign set-key
        if: matrix.target_os == 'darwin'
        run: |
          security import /tmp/certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CERTIFICATE_PWD build.keychain

      - name: Use gon to sign
        if: matrix.target_os == 'darwin'
        run: |
          gon /tmp/.gon.json

      - name: Build tarball
        run: |
          GOOS=${{ matrix.target_os }} GOARCH=${{ matrix.target_arch }} make build-bacalhau-tgz
          echo ${{ github.sha }} > Release.txt
        env:
          PRIVATE_KEY_PASSPHRASE: ${{secrets.PRIVATE_KEY_PASSPHRASE}}
      - name: Generate Changelog
        run: echo "# Release Notes" > CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.BINARY_TARBALL }}
            ${{ env.BINARY_TARBALL_SIGNATURE }}
          body_path: CHANGELOG.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
