# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  linux:
    machine:
      image: ubuntu-2204:2022.04.2
    resource_class: xlarge

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    parallelism: 10
    environment:
      GOVER: 1.18.3
      GOLANGCILINT_VER: v1.46.2
      IPFS_VERSION: v0.12.2
      GOPROXY: https://proxy.golang.org
      ARCHIVE_OUTDIR: dist/archives
      GOOS: << parameters.target_os >>
      GOARCH: << parameters.target_arch >>
    working_directory: ~/repo
    executor: linux
    parameters:
      target_arch:
        type: string
      target_os:
        type: string

    steps:
      - checkout
      - run:
          name: Echos
          command: |
            echo "GOOS => $GOOS"
            echo "GOARCH => $GOARCH"
      - run:
          name: Install Go
          command: |
            curl -Ls "https://dl.google.com/go$GOVER.$GOOS-$GOARCH.tar.gz"
            rm -rf /usr/local && tar -C /usr/local -xzf "go$GOVER.$GOOS-$GOARCH.tar.gz"
            export PATH=$PATH:/usr/local/go/bin
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - when:
          condition:
            and:
              - equal: ['linux', << parameters.target_os >>]
              - equal: ['amd64', << parameters.target_arch >>]
          steps:
            - run:
                name: golangci-lint-$GOLANGCILINT_VER
                command: |
                    # binary will be /usr/local/go/bin/bin/golangci-lint
                    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/go/bin $GOLANGCILINT_VER
                    golangci-lint --version
            - run:
                name: Run go mod tidy check diff
                command: make modtidy check-diff

            - run:
                name: Install IPFS
                command: |
                  export IPFS_BUILD="$GOOS-$GOARCH"
                  curl -s -L -O "https://dist.ipfs.io/go-ipfs/${IPFS_VERSION}/go-ipfs_${IPFS_VERSION}_${IPFS_BUILD}.tar.gz"
                  tar -xvzf "go-ipfs_${IPFS_VERSION}_${IPFS_BUILD}.tar.gz"
                  cd go-ipfs
                  sudo bash install.sh
                  cd ..

      - run:
          name: Build
          command: GO111MODULE=on make build

      - when:
          condition:
            and:
              - equal: ['linux', << parameters.target_os >>]
              - equal: ['amd64', << parameters.target_arch >>]
          steps:
            - run:
                name: Test
                command: |
                  go test -v $(go list ./... | circleci tests split --split-by=timings)

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build:
          name: ubuntu-amd64
          target_os: linux
          target_arch: amd64
      - build:
          name: macOS-arm64
          target_os: darwin
          target_arch: arm64
      - build:
          name: macOS-amd64
          target_os: darwin
          target_arch: amd64
