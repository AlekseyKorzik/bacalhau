{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "17ce048791de770140dad064b9af8c37589611b7bebc5112d4c5c869ed353ece",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "1dabaf1a720d7a662fffcb2f92227a51be3b9fd33b2d19144b67a428fded8957",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "9b5fd2d5c191c2eca6b4537122d2d40b88161453ecfb04eef9b728a84e52d81a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/OnChainScheduler.sol:OnChainScheduler": {
        "src": "contracts/OnChainScheduler.sol:11",
        "version": {
          "withMetadata": "6d8eac39a59d0244101389d4d2790fe5774eba2b3cd547a8e53319830cf97972",
          "withoutMetadata": "9f3ec329790e3f19ea18459352ea547df0b5d66aa9db1f6b1c888a6befb82132",
          "linkedWithoutMetadata": "9f3ec329790e3f19ea18459352ea547df0b5d66aa9db1f6b1c888a6befb82132"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OnChainScheduler",
            "src": "contracts/OnChainScheduler.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "e40a752b0f828097c9af42f93fa092db753fdf8f0ad8f767960a996b3c47ac27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "17ce048791de770140dad064b9af8c37589611b7bebc5112d4c5c869ed353ece",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "1dabaf1a720d7a662fffcb2f92227a51be3b9fd33b2d19144b67a428fded8957",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "9b5fd2d5c191c2eca6b4537122d2d40b88161453ecfb04eef9b728a84e52d81a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/OnChainScheduler.sol:ArtistAttribution": {
        "src": "contracts/OnChainScheduler.sol:11",
        "version": {
          "withMetadata": "e0aaa173d1e07f822437538fa1f7554c6922a72098bf8d3aba31bd7528a2e444",
          "withoutMetadata": "bbedd61c7961ee7dd7ceb2d6e5dcd5c81d18e4734973972d3b5f3f7dfd9457ca",
          "linkedWithoutMetadata": "bbedd61c7961ee7dd7ceb2d6e5dcd5c81d18e4734973972d3b5f3f7dfd9457ca"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters"
        ],
        "methods": [
          "(uint256,uint256,uint256)",
          "getArtistIDs()",
          "getArtist(string)",
          "getArtistCost()",
          "getImageCost()",
          "getArtistCommission()",
          "getImageIDs()",
          "getImage(uint256)",
          "getCustomerImages(address)",
          "updateCost(uint256,uint256,uint256)",
          "artistChangeWallet(string,address)",
          "deleteArtist(string)",
          "artistWithdraw(string)",
          "adminWithdraw(address payable)",
          "CreateArtist(string,string)",
          "ArtistComplete(string)",
          "ArtistCancelled(string)",
          "CreateImage(string,string)",
          "ImageComplete(uint256,string)",
          "ImageCancelled(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ArtistAttribution",
            "src": "contracts/OnChainScheduler.sol:73"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_jobIds",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Counter)140_storage",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:13"
            },
            {
              "label": "computeProviderEscrow",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:15"
            },
            {
              "label": "computeProviderRevenue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:16"
            },
            {
              "label": "imageCost",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:18"
            },
            {
              "label": "artistCost",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:19"
            },
            {
              "label": "artistCommission",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:20"
            },
            {
              "label": "images",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(Image)1291_storage)",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:55"
            },
            {
              "label": "imageIDs",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:58"
            },
            {
              "label": "artists",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Artist)1307_storage)",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:61"
            },
            {
              "label": "artistIDs",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:63"
            },
            {
              "label": "customerImages",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "ArtistAttribution",
              "src": "contracts/OnChainScheduler.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Artist)1307_storage)": {
              "label": "mapping(string => struct ArtistAttribution.Artist)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Image)1291_storage)": {
              "label": "mapping(uint256 => struct ArtistAttribution.Image)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Artist)1307_storage": {
              "label": "struct ArtistAttribution.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "wallet",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "escrow",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "revenue",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "numJobsRun",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTrained",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Counter)140_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Image)1291_storage": {
              "label": "struct ArtistAttribution.Image",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "customer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "artist",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "prompt",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ipfsResult",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "errorMessage",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isComplete",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "e40a752b0f828097c9af42f93fa092db753fdf8f0ad8f767960a996b3c47ac27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}